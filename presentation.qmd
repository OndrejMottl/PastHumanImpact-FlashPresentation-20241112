---
format: 
  revealjs:
    slide-number: true
    theme: [default, custom_theme.scss]
    chalkboard:
      buttons: false
    preview-links: auto
    output-file: "index"
    output-ext: "html"
---

```{r}
#| label: setup
#| include: false
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
  fig.width = 7,
  fig.height = 5,
  fig.align = "center",
  out.width = "100%"
)

install_if_missing <- function(package_name) {
  if (!require(package_name, character.only = TRUE)) renv::install(package_name)
  library(package_name, character.only = TRUE)
}

lapply(
  c(
    "tidyverse",
    "here",
    "knitr",
    "colorspace",
    "cowplot"
  ),
  install_if_missing
)

if (!require("RUtilpol")) remotes::install_github("HOPE-UIB-BIO/R-Utilpol-package")

library(RUtilpol)

include_local_figure <- function(data_source) {
  knitr::include_graphics(
    path = here::here(
      "Materials",
      data_source
    ),
    error = TRUE
  )
}

here::i_am("presentation.qmd")

# define general
text_size <- 15
line_size <- 0.1
point_size <- 1

# colours
col_land <- "grey90"

col_common_gray <- "#636363"

col_ecosystem <- "#64b264"

palette_ecozones <-
  c(
    "Polar" = "#907A8E",
    "Cold - Cold Summer" = "#8C4418",
    "Cold - Warm Summer" = "#DC702E",
    "Cold - Hot Summer" = "#AA6133",
    "Cold - Dry Winter" = "#CB8152",
    "Cold - Dry Summer" = "#E59463",
    "Temperate" = "#371E71",
    "Temperate - Dry Winter" = "#562FB1",
    "Temperate - Dry Summer" = "#9A7EDD",
    "Arid" = "#DDDF78",
    "Tropical" = "#D68FD6"
  )

palette_predictors <- c(
  human = "#c99b38", 
  climate = "#1f6f6f"
)

```

# [Past Human Impact]{.bold .r-fit-text} {.title}

**Ond≈ôej Mottl**

*Department of Botany - 2024-11-12*

## {.inverse}

:::: {.columns}

::: {.column width="30%"}

<br>
<br>
<br>
<br>

```{r}
#| label: earth image
include_local_figure("Earth.jpeg")
```

:::

::: {.column width="70%" .textcenter .center-vertical}

7/8 [global]{.text-color-highlight-primary} Earth system [boundaries]{.text-color-highlight-secondary} are already [exceeded]{.text-color-highlight-tertiary} 

::: {.text-smaller .text-gray}
(Rockstr√∂m et al. (2023))
:::

:::

::::

::: {.footer}
Image generated by Bing
:::

## {background-image="Materials/pexels-justus-menke-3490295-5214145.jpg" background-opacity="0.35"}

<br>
<br>
<br>
<br>

:::: {.textcenter} 

::: { .r-fit-text .bold}
Humans altered [> 75%]{.text-color-highlight-primary} of ice-free land 

::: {.text-smaller .text-gray}
(Ellis, E. C. & Ramankutty, N. (2008))
:::

:::
::::

::: {.footer}
Image by Justus Menke from Pexels
:::

## When?

<br>
<br>

:::: {.columns}

::: {.column width="33%" .fragment}
```{r}
#| label: when-1
include_local_figure("prehistoric_man.jpeg")
```
:::

::: {.column width="33%" .fragment}

```{r}
#| label: when-2
include_local_figure("ricefield.jpeg")
```
:::

::: {.column width="33%" .fragment}

```{r}
#| label: when-3
include_local_figure("industrialization.jpeg")
```

:::

::::

::: {.footer}
Images created by Bing 
:::

## Human vs Climate {background-image="Materials/human_vs_climate.jpeg" background-opacity="0.50"}

<br>
<br>

:::{.blockquote .fragment .textcenter}
At a larger scale, has [humans]{.text-color-highlight-primary} or [climate]{.text-color-highlight-secondary}  been the main driver of vegetation change during a Holocene?
:::

::: {.footer}
Image created by Bing 
:::

# Ond≈ôej Mottl

::: {.textcenter}

Head of üßë‚Äçüíª[Laboratory of Quantitative Ecology](https://ondrejmottl.github.io/lab/about_the_lab.html)

:::

:::: {.columns}

::: {.column width="60%"}
<br>

* üìß Ondrej.mottl(at)gmail.com
* üê¶ [@OndrejMottl](https://twitter.com/OndrejMottl)
* üê± [Github OndrejMottl](https://github.com/OndrejMottl)
* üÜî [ORCID 0000-0002-9796-5081](https://orcid.org/0000-0002-9796-5081)
* üåê [bit.ly/ondrej_mottl](https://bit.ly/ondrej_mottl)
:::

::: {.column width="40%"}
```{r}
#| label: head photo
include_local_figure("head_photo.png")
```
:::

::::

## Past Vegetation

```{r}
#| label: pollen-map-1
#| include: false
data_records_meta <-
  RUtilpol::get_latest_file(
    file_name = "data_records_meta",
    dir = here::here("Data")
  )
```

```{r}
#| label: pollen-map-2
p0_map <-
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = long,
      y = lat
    ),
  ) +
  ggplot2::borders(
    fill = col_land,
    colour = NA
  ) +
  ggplot2::scale_fill_manual(
    values = palette_ecozones,
    drop = FALSE,
    guide = "none"
  ) +
  ggplot2::scale_colour_manual(
    values = palette_ecozones,
    drop = FALSE,
    guide = "none"
  ) +
  ggplot2::coord_quickmap() +
  ggplot2::theme_classic() +
  ggplot2::theme(
    legend.position = "none",
    legend.text = ggplot2::element_text(
      size = text_size, # [config criteria]
      colour = col_common_gray # [config criteria]
    ),
    legend.title = ggplot2::element_text(
      size = text_size, # [config criteria]
      colour = col_common_gray # [config criteria]
    ),
    panel.background = ggplot2::element_blank(),
    plot.background = ggplot2::element_blank(),
    panel.spacing = ggplot2::unit(c(0, 0, 0, 0), "null"),
    plot.margin = ggplot2::unit(c(0, 0, 0, 0), "cm"),
  ) +
  ggplot2::labs(
    x  = "Longitude",
    y  = "Latitude"
  )

p0_map +
  ggplot2::geom_point(
    data = data_records_meta,
    mapping = ggplot2::aes(
      colour = climatezone
    ),
    size = 1
  ) +
  ggplot2::theme_void()
```

::: {.footer}
over 1260 Fossil pollen records from the Neotoma database; over 75,000 individual assemblages
:::

## Europe

```{r}
#| label: pollen-map-3
data_records_meta_eu <-
  data_records_meta %>%
  dplyr::filter(
    region == "Europe"
  )

p0_map +
  ggplot2::geom_point(
    data = data_records_meta_eu,
    mapping = ggplot2::aes(
      colour = climatezone
    ),
    size = 2
  ) +
  ggplot2::coord_quickmap(
    xlim = range(data_records_meta_eu$long),
    ylim = range(data_records_meta_eu$lat)
  ) +
  ggplot2::theme_void()
```

## Temperate climate zone

```{r}
#| label: pollen-map-4
data_records_meta_eu_temperate <-
  data_records_meta_eu %>%
  dplyr::filter(
    climatezone == "Temperate"
  )

p0_map +
  ggplot2::geom_point(
    data = data_records_meta_eu,
    mapping = ggplot2::aes(
      colour = col_common_gray
    ),
    size = 1
  ) +
  ggplot2::geom_point(
    data = data_records_meta_eu_temperate,
    mapping = ggplot2::aes(
      colour = climatezone
    ),
    size = 3
  ) +
  ggplot2::coord_quickmap(
    xlim = range(data_records_meta_eu$long),
    ylim = range(data_records_meta_eu$lat)
  ) +
  ggplot2::theme_void()
```

## Example record

```{r}
#| label: pollen-map-5
p0_map +
  ggplot2::geom_point(
    data = data_records_meta_eu_temperate,
    mapping = ggplot2::aes(
      colour = col_common_gray
    ),
    size = 1
  ) +
  ggplot2::geom_point(
    data = data_records_meta_eu_temperate %>%
      dplyr::filter(dataset_id == 215),
    mapping = ggplot2::aes(
      colour = climatezone
    ),
    size = 5
  )+
  ggplot2::coord_quickmap(
    xlim = range(data_records_meta_eu$long),
    ylim = range(data_records_meta_eu$lat)
  ) +
  ggplot2::theme_void()
```

## Ecosystem Properties

```{r}
#| label: line-plot-setup
#| include: false
time_step <- 1

p0_line <-
  ggplot2::ggplot(
    mapping = ggplot2::aes(
      x = age,
      y = value
    )
  ) +
  ggplot2::facet_wrap(
    ~predictor,
    nrow = 1,
    scales = "free_x",
    labeller = ggplot2::labeller(
      predictor = ggplot2::label_wrap_gen(5)
    )
  ) +
  ggplot2::scale_y_continuous(
    breaks = scales::pretty_breaks(n = 3)
  ) +
  ggplot2::scale_x_continuous(
    trans = "reverse",
    breaks = seq(2e3, 8.5e3, time_step * 1e3),
    labels = seq(2, 8.5, time_step)
  ) +
  ggplot2::coord_flip(
    xlim = c(7e3, 2e3)
  ) +
  ggplot2::labs(
    x = "Age (ka cal yr BP)",
    y = "Value"
  ) +
  ggplot2::theme_classic() +
  ggplot2::theme(
    plot.margin = grid::unit(c(0, 1, 0, 1), "mm"),
    panel.spacing.y = grid::unit(3, "mm"),
    legend.position = "none",
    legend.text = ggplot2::element_text(
      size = text_size, # [config criteria]
      color = col_common_gray # [config criteria]
    ),
    legend.title = ggplot2::element_text(
      size = text_size, # [config criteria]
      color = col_common_gray # [config criteria]
    ),
    text = ggplot2::element_text(
      size = text_size, # [config criteria]
      color = col_common_gray # [config criteria]
    ),
    axis.text.y = ggplot2::element_text(
      size = text_size, # [config criteria]
      color = col_common_gray # [config criteria]
    ),
    axis.text.x = ggplot2::element_blank(),
    axis.title.y = ggplot2::element_text(
      size = text_size, # [config criteria]
      color = col_common_gray # [config criteria]
    ),
    axis.title.x = ggplot2::element_blank(),
    axis.line.x = ggplot2::element_blank(),
    axis.ticks.x = ggplot2::element_blank(),
    line = ggplot2::element_line(
      linewidth = line_size, # [config criteria]
      color = col_common_gray # [config criteria]
    ),
    strip.background = ggplot2::element_rect(
      fill = "white",
      color = col_common_gray # [config criteria]
    ),
    strip.text = ggplot2::element_text(
      size = text_size * 0.75, # [config criteria]
      color = col_common_gray # [config criteria]
    )
  ) +
  ggplot2::geom_vline(
    xintercept = seq(0, 10e3, time_step * 1e3),
    col = colorspace::lighten(col_common_gray, amount = 0.5), # [config criteria]
    linetype = 1,
    alpha = 0.5,
    linewidth = line_size # [config criteria]
  )

plot_line <- function(data_source, sel_col = "black", show_axis = FALSE) {
  if (
    isFALSE(show_axis)
  ) {
    p0_line <-
      p0_line +
      ggplot2::theme(
        axis.title.y = ggplot2::element_blank(),
        axis.text.y = ggplot2::element_blank(),
        axis.ticks.y = ggplot2::element_blank()
      )
  }

  p0_line +
    ggplot2::geom_line(
      data = data_source,
      linewidth = line_size * 10,
      color = sel_col
    )
}

plot_density <- function(data_source, sel_col = "black", show_axis = FALSE) {
  if (
    isFALSE(show_axis)
  ) {
    p0_line <-
      p0_line +
      ggplot2::theme(
        axis.title.y = ggplot2::element_blank(),
        axis.text.y = ggplot2::element_blank(),
        axis.ticks.y = ggplot2::element_blank()
      )
  }
  p0_line +
    ggplot2::geom_ribbon(
      data = data_source,
      mapping = ggplot2::aes(
        x = age,
        ymax = value,
        ymin = 0
      ),
      orientation = "x",
      color = sel_col,
      fill = colorspace::lighten(sel_col, amount = 0.5),
      linewidth = line_size * 10
    )
}

add_predictor_as_factor <- function(data_source) {
  data_source %>%
    dplyr::mutate(
      predictor = dplyr::case_when(
        .default = predictor,
        predictor == "Density diversity" ~ "Change points - Diversity",
        predictor == "Density turnover" ~ "Change points - Turnover"
      ),
      predictor = factor(
        predictor,
        levels = c(
          "N0", "N1", "N2",
          "N2 divided by N1", "N1 divided by N0",
          "DCCA axis 1", "ROC",
          "Change points - Diversity", "Change points - Turnover",
          "MAT", "MTCO",
          "MAPS", "MAPW",
          "SPD"
        )
      )
    ) %>%
    return()
}
```

```{r}
#| label: pollen-paps-data
#| include: false
data_example_records <-
  RUtilpol::get_latest_file(
    file_name = "data_example_record",
    dir = here::here("Data")
  )

data_example_record_raw <-
  data_example_records %>%
  purrr::chuck("data_merge", 1)

```

:::: {.columns}

::: {.column width="20%"}

<br>
<br>
<br>
<br>

```{r}
#| label: pollen-paps-2
include_local_figure("icon_ecosystem.png")
```
:::

::: {.column width="80%" .fragment}
```{r}
#| label: pollen-paps-3
data_paps_line <-
  data_example_record_raw %>%
  dplyr::select(
    "age",
    "N0", "N1", "N2",
    "N2 divided by N1", "N1 divided by N0",
    "DCCA axis 1", "ROC"
  ) %>%
  tidyr::pivot_longer(
    cols = -age,
    names_to = "predictor",
    values_to = "value"
  ) %>%
  add_predictor_as_factor()

data_paps_density <-
  data_example_record_raw %>%
  dplyr::select(
    "age",
    "Density diversity", "Density turnover"
  ) %>%
  tidyr::pivot_longer(
    cols = -age,
    names_to = "predictor",
    values_to = "value"
  ) %>%
  add_predictor_as_factor()

fig_paps_line <-
  plot_line(
    data_source = data_paps_line,
    show_axis = TRUE,
    sel_col = col_ecosystem
  )

fig_paps_density <-
  plot_density(
    data_source = data_paps_density,
    sel_col = col_ecosystem
  )

cowplot::plot_grid(
  fig_paps_line,
  fig_paps_density,
  nrow = 1,
  align = "h",
  rel_widths = c(8, 2)
)
```

:::

::::
::: {.footer}
9 ecosystem properties that reflect the multidimensional aspects of biodiversity
:::

## Climate

:::: {.columns}

::: {.column width="20%"}

<br>
<br>

```{r}
#| label: climate-1
include_local_figure("icon_climate.png")
```
:::

::: {.column width="80%" .fragment}
```{r}
#| label: climate-2
data_climate_line <-
  data_example_record_raw %>%
  dplyr::select(
    "age",
    "MAT", "MTCO",
    "MAPS", "MAPW"
  ) %>%
  tidyr::pivot_longer(
    cols = -age,
    names_to = "predictor",
    values_to = "value"
  ) %>%
  add_predictor_as_factor()



fig_climate_line <-
  plot_line(
    data_source = data_climate_line,
    show_axis = TRUE,
    sel_col = palette_predictors["climate"]
  )

fig_climate_line
```

:::

::::

::: {.footer}
4 paleoclimatic variables, capturing variation in both temperature and precipitation
:::

## Human presence/impact {auto-animate="true"}

```{r}
#| label: human-map-data
#| include: false
data_c14_prepared <-
  RUtilpol::get_latest_file(
    file_name = "data_c14_prepared",
    dir = here::here("Data")
  )  %>% 
  dplyr::filter(
    dplyr::between(
      long,
      min(data_records_meta_eu$long),
      max(data_records_meta_eu$long)
      ),
    dplyr::between(
      lat,
      min(data_records_meta_eu$lat),
      max(data_records_meta_eu$lat)
      ) 
  )
```

:::: {.columns}

::: {.column width="20%"}

<br>
<br>

```{r}
#| label: human-icon-1
include_local_figure("icon_human.png")
```
:::

::: {.column width="80%" .fragment}

```{r}
#| label: human-map-1
fig_human_map <-
  p0_map +
  ggplot2::geom_point(
    data = data_records_meta_eu_temperate %>%
      dplyr::filter(dataset_id == 215),
    mapping = ggplot2::aes(
      colour = climatezone
    ),
    size = 5
  ) +
  ggplot2::coord_quickmap(
    xlim = range(data_records_meta_eu$long),
    ylim = range(data_records_meta_eu$lat)
  ) +
  ggplot2::theme_void()

fig_human_map
```

:::

::::

## Human presence/impact {auto-animate="true"}


:::: {.columns}

::: {.column width="20%"}

<br>
<br>

```{r}
#| label: human-icon-2
include_local_figure("icon_human.png")
```
:::

::: {.column width="80%"}

```{r}
#| label: human-map-2
fig_human_map <-
  p0_map +
  ggplot2::geom_point(
    data = data_c14_prepared,
    mapping = ggplot2::aes(
      x = long,
      y = lat,
    ),
    size = 1,
    col = palette_predictors["human"]
  ) +
  ggplot2::geom_point(
    data = data_records_meta_eu_temperate %>%
      dplyr::filter(dataset_id == 215),
    mapping = ggplot2::aes(
      colour = climatezone
    ),
    size = 5
  ) +
  ggplot2::coord_quickmap(
    xlim = range(data_records_meta_eu$long),
    ylim = range(data_records_meta_eu$lat)
  ) +
  ggplot2::theme_void()

fig_human_map
```

:::

::::

::: {.footer}
over 150,000 radiocarbon dates derived from archaeological data
:::

## Human presence/impact

:::: {.columns}

::: {.column width="20%"}

<br>
<br>

```{r}
#| label: human-icon-3
include_local_figure("icon_human.png")
```
:::

::: {.column width="80%"}
```{r}
#| label: human-line-1
data_humna_density <-
  data_example_record_raw %>%
  dplyr::select(
    "age",
    "SPD"
  ) %>%
  tidyr::pivot_longer(
    cols = -age,
    names_to = "predictor",
    values_to = "value"
  ) %>%
  add_predictor_as_factor()

fig_human_density <-
  plot_density(
    data_source = data_humna_density,
    show_axis = TRUE,
    sel_col = palette_predictors["human"]
  )

fig_human_density
```

:::

::::

## Example record

```{r}
#| label: combined-line-1
fig_examle_combined <-
  cowplot::plot_grid(
    fig_paps_line,
    # The figure cannot be re-used, because of the axis
    plot_line(
      data_source = data_climate_line,
      show_axis = FALSE,
      sel_col = palette_predictors["climate"]
    ),
    # The figure cannot be re-used, because of the axis
    plot_density(
      data_source = data_humna_density,
      show_axis = FALSE,
      sel_col = palette_predictors["human"]
    ),
    nrow = 1,
    align = "h",
    rel_widths = c(9, 4, 1)
  )

fig_examle_combined
```

## Example record - Predictor importance

```{r}
#| label: predictor-importance-1
fig_importance_example <-
  data_example_records %>%
  purrr::chuck("varpar_summary_table", 1) %>%
  dplyr::select(
    predictor,
    ratio = i_perc_percent
  ) %>%
  ggplot2::ggplot() +
  ggplot2::geom_bar(
    ggplot2::aes(
      x = 1,
      y = ratio / 100,
      fill = predictor,
      color = predictor,
    ),
    stat = "identity",
    col = NA,
    position = "stack",
    show.legend = TRUE
  ) +
  ggplot2::scale_y_continuous(
    position = "left",
    limits = c(0, 1),
    breaks = seq(0, 1, 0.2),
    oob = scales::squish
  ) +
  ggplot2::scale_fill_manual(
    values = palette_predictors,
    drop = FALSE
  ) +
  ggplot2::scale_colour_manual(
    values = palette_predictors,
    drop = FALSE
  ) +
  ggplot2::guides(
    colour = "none",
    alpha = "none",
    fill = ggplot2::guide_legend(
      title = "Predictors",
      title.position = "top",
      title.theme = ggplot2::element_text(
        size = text_size, # [config criteria]
        colour = col_common_gray
      ),
      label.theme = ggplot2::element_text(
        size = text_size, # [config criteria]
        colour = col_common_gray
      ),
      nrow = 2,
      ncol = 1,
      byrow = TRUE
    )
  ) +
  ggplot2::theme(
    legend.position = "right",
    legend.title = element_text(
      size = text_size, # [config criteria]
      colour = col_common_gray,
    ),
    legend.text = ggplot2::element_text(
      size = text_size, # [config criteria]
      colour = col_common_gray
    ),
    legend.margin = ggplot2::margin(
      t = 0,
      r = 0,
      b = 0,
      l = 0,
      unit = "pt"
    ),
    panel.background = ggplot2::element_blank(),
    panel.grid.major = ggplot2::element_blank(),
    plot.background = ggplot2::element_rect(
      fill = "transparent",
      colour = NA
    ),
    axis.title = ggplot2::element_text(
      size = text_size, # [config criteria]
      colour = col_common_gray
    ),
    axis.text.x = ggplot2::element_blank(),
    axis.ticks.x = ggplot2::element_blank(),
    axis.line.x = ggplot2::element_blank(),
    text = ggplot2::element_text(
      size = text_size, # [config criteria]
      colour = col_common_gray
    ),
    line = ggplot2::element_line(
      linewidth = line_size, # [config criteria]
      colour = col_common_gray
    )
  ) +
  ggplot2::labs(
    y = "Ratio of importance",
    x = NULL
  )

fig_examle_combined_stripped <-
  cowplot::plot_grid(
    fig_paps_line +
      ggplot2::theme_void() +
      ggplot2::theme(
        strip.text = ggplot2::element_blank(),
        axis.text = ggplot2::element_blank(),
        axis.title = ggplot2::element_blank(),
        axis.ticks = ggplot2::element_blank()
      ),
    # The figure cannot be re-used, because of the axis
    plot_line(
      data_source = data_climate_line,
      show_axis = FALSE,
      sel_col = palette_predictors["climate"]
    ) +
      ggplot2::theme_void() +
      ggplot2::theme(
        strip.text = ggplot2::element_blank(),
        axis.text = ggplot2::element_blank(),
        axis.title = ggplot2::element_blank(),
        axis.ticks = ggplot2::element_blank()
      ),
    # The figure cannot be re-used, because of the axis
    plot_density(
      data_source = data_humna_density,
      show_axis = FALSE,
      sel_col = palette_predictors["human"]
    ) +
      ggplot2::theme_void() +
      ggplot2::theme(
        strip.text = ggplot2::element_blank(),
        axis.text = ggplot2::element_blank(),
        axis.title = ggplot2::element_blank(),
        axis.ticks = ggplot2::element_blank()
      ),
    nrow = 1,
    align = "h",
    rel_widths = c(9, 4, 1)
  )

cowplot::plot_grid(
  fig_examle_combined_stripped,
  NULL,
  fig_importance_example,
  nrow = 1,
  rel_widths = c(6, 1, 4)
)
```

## [This presentation]{.bold .r-fit-text} {.title}

::: {.r-fit-text}
[üò∏ Code on GitHub](https://github.com/OndrejMottl/PastHumanImpact-FlashPresentation-20241112)

[üñ•Ô∏è Slides](https://ondrejmottl.github.io/PastHumanImpact-FlashPresentation-20241112/)

[![](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
:::





